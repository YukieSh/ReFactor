---
- name: copy function files
  copy:
    src: '{{ item }}'
    dest: /opt/scripts/tools/eMMC/
  with_items:
    - '{{ role_path }}/files/umikaze-files'
    - '{{ role_path }}/files/partition.py'

- name: add functions for backup
  blockinfile:
    path: 
    block: |
      _umikaze_backup_directory=""

      backup_umikaze_settings() {
        generate_line 80 '='
        echo_broadcast "creating/discovering storage partition"

        partitioner_output=$(/opt/scripts/tools/eMMC/partition.py || true)

        echo_broadcast "partitioner output:"
        echo_broadcast "$partitioner_output"

        storage_partition=$(echo "$partitioner_output" | grep "storage partition ready" | awk '{print $NF}')

        if [ "x${storage_partition}" != "x" ] ; then
          echo_broadcast "==> Found storage partition - making a filesystem"

          mkfs.ext4 -F ${storage_partition}
          echo_broadcast "====> Created filesystem"
          echo_broadcast "====> Copying files into it"

          input_dir=/tmp/input
          output_dir=/tmp/storage

          echo_broadcast "available partitions:"
          echo_broadcast `ls /dev/mmc*`
          mkdir $input_dir
          echo "mounting $destination as $input_dir"
          mount $destination"p1" $input_dir

          mkdir $output_dir
          echo "mounting $storage_partition as $output_dir"
          mount $storage_partition $output_dir

          if [ -f $input_dir/etc/kamikaze-release ]; then
            generate_line 80 '='
            echo "Detected a kamikaze-release file, backup of configs beginning."
            generate_line 80 '='

            if [ -d $input_dir/home/octo/.octoprint ]; then
              echo "updating octoprint's name with the new Umikaze release name"
              # use sed to modify the octoprint config.yaml to register the new Umikaze version
              VERSION=`cat /etc/kamikaze-release | awk -F ' ' '{print $1 $2}'`
              sed -i "s/name: .*kaze.*/name: $VERSION/" $input_dir/home/octo/.octoprint/config.yaml
              echo "done"
              HOSTNAME=`cat /etc/hostname`
              sed -i "s,kamikaze.local:8080/?action=stream,$HOSTNAME:8080/?action=stream," $input_dir/home/octo/.octoprint/config.yaml
              sed -i "s,kamikaze.local:8080/?action=snapshot,localhost:8080/?action=snapshot," $input_dir/home/octo/.octoprint/config.yaml

              # clear the logs from the .octoprint folder
              if [ -f $input_dir/home/octo/.octoprint/logs/plugin_redeem.log ]; then
                rm $input_dir/home/octo/.octoprint/logs/plugin_redeem.log
              fi
              if [ -f $input_dir/home/octo/.octoprint/logs/octoprint.log ]; then
                rm $input_dir/home/octo/.octoprint/logs/octoprint.log*
              fi
              if [ -f $input_dir/home/octo/.octoprint/logs/serial.log ]; then
                rm $input_dir/home/octo/.octoprint/logs/serial.log*
              fi
            fi
            get_rsync_options
            rsync -aAxv $rsync_options --files-from=/opt/scripts/tools/eMMC/umikaze-files --ignore-missing-args $input_dir $output_dir

            _umikaze_backup_directory="$output_dir"

            # the octoprint UID may have changed across releases - fix it up now
            chown -R octo:octo $output_dir/etc/redeem/
            chown -R octo:octo $output_dir/home/octo/
            chown -R octo:octo $output_dir/etc/toggle/

          fi

          generate_line 80 '='
          echo_broadcast "BACKUP FINISHED"
          generate_line 80 '='
          echo "##################################"
          echo "Unmount of eMMC"
          umount $input_dir
          echo "done"
          rmdir $input_dir
          echo "done"
        fi
      }

- name: insert function call to flasher
  lineinfile:
    path: /opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh
    insertafter: prepare_environment
    line: backup_umikaze_settings
    state: present

- name: uncomment flasher script in uEnv.txt
  replace:
    path: /boot/uEnv.txt
    regex: '#(cmdline=init.*)'
    replace: '\1'

- name: uncomment the enabler
  replace:
    path: /boot/uEnv.txt
    regex: '#(enable_.*)'
    replace: '\1'